name: CI

on:
  push:
    branches: [ main, dev, fb-dev-workflow ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'
  pull_request:
    branches: [ main, dev, fb-dev-workflow ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install frontend dependencies
        run: |
          cd frontend
          pnpm install

      - name: Build Nuxt for ESLint config
        run: |
          cd frontend
          pnpm run dev &
          sleep 15
          pkill -f "pnpm run dev" || true

      - name: Lint JavaScript/TypeScript
        run: |
          cd frontend
          pnpm lint:ci || true

      - name: Check commit message format
        uses: wagoid/commitlint-github-action@v5
        if: github.event_name == 'pull_request'

      - name: Lint Python notebooks
        run: |
          pip install black flake8
          flake8 notebooks --count --select=E9,F63,F7,F82 --show-source --statistics || true
          black --check notebooks || true

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install frontend dependencies
        run: |
          cd frontend
          pnpm install

      - name: Run frontend tests
        run: |
          cd frontend
          pnpm run dev & sleep 10 && pnpm test:ci || true
        continue-on-error: true  # Allow tests to fail initially while being set up

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend/coverage
        if: always()

  build-test:
    name: Test Docker Build
    runs-on: ubuntu-latest
    needs: [test-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: daedalusdata:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Test Docker container
        run: |
          docker-compose up -d
          # Wait for services to start
          sleep 30
          # Test if services are accessible
          curl -f http://localhost:3000 || exit 1
          curl -f http://localhost:8888 || exit 1
          docker-compose down